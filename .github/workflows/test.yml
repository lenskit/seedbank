name: Run Tests
on:
  push:
    branches:
      - main
  release:
    types: [published]
  pull_request:

concurrency:
  group: test-${{github.ref}}
  cancel-in-progress: true

jobs:
  test:
    name: Test with Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        - macos
        - windows
        - ubuntu
        python:
        - "3.10"
        - "3.11"
        - "3.12"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python}}

    - name: Set up dev environment
      run: |
        pip install -e '.[test]'

    - name: Run tests
      run: python -m pytest --cov=seedbank --cov-report=xml tests

    - name: Save test results
      uses: lenskit/lkbuild/actions/save-test-results@main
      with:
        artifact-name: test-${{matrix.platform}}-py${{matrix.python}}

  test-extra:
    name: Test single extra ${{matrix.extra}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        extra:
        - cuda11x
        - numba
        - torch
        - tf

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Set up dev environment
      run: |
        pip install -e '.[test,${{matrix.extra}}]'

    - name: Run tests
      run: python -m pytest --cov=seedbank --cov-report=xml tests

    - name: Save test results
      uses: lenskit/lkbuild/actions/save-test-results@main
      with:
        artifact-name: test-extra-${{matrix.extra}}

  report:
    name: Process test results
    runs-on: ubuntu-latest
    needs: [test, test-extra]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Report test results
      uses: lenskit/lkbuild/actions/report-test-results@main


  sdist:
    name: Build and Publish Packages
    runs-on: ubuntu-latest
    needs: [test, test-extra]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch Git tags
      run: git fetch --tags

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Python deps
      run: pip install -U build twine

    - name: Build distribution
      run: python -m build

    - name: Save archive
      uses: actions/upload-artifact@v3
      with:
        name: pypi-pkgs
        path: dist

    - name: List dist dir
      run: ls -R dist

    - name: Publish PyPI packages
      if: github.event_name == 'release'
      run: |
        twine upload dist/*
      shell: bash
      env:
        TWINE_NON_INTERACTIVE: y
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
